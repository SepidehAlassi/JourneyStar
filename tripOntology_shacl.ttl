@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix currencyA: <https://spec.edmcouncil.org/fibo/ontology/FND/Accounting/CurrencyAmount/> .
@prefix currency: <https://spec.edmcouncil.org/fibo/ontology/FND/Accounting/ISO4217-CurrencyCodes/>.
@prefix schema: <https://schema.org/> .
@prefix dbr: <http://dbpedia.org/resource/> .
@prefix dbo: <http://dbpedia.org/ontology/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix trip-shacl: <http://journeyStar.dhlab.ch/shacl/trip-shacl#> .
@prefix trip-onto: <http://journeyStar.dhlab.ch/ontology/trip-onto#> .


# ##############################################################
## Node Shapes
# ##############################################################


### Shape for Class Person ###
################################

trip-shacl:PersonShape a sh:NodeShape  ;
    sh:targetClass trip-onto:Person ;
    sh:property [
        sh:path schema:name ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
    ],
    [
        sh:path schema:givenName ;
        sh:datatype xsd:string ;
    ] ,
    [
        sh:path schema:familyName ;
        sh:datatype xsd:string ;
    ] ,
    [
        sh:path schema:gender ;
        sh:or ([sh:datatype xsd:string ]
                [sh:in ( schema:Female schema:Male )]);
    ] ,
    [
        sh:path schema:birthDate ;
        sh:maxCount 1 ;
        sh:datatype xsd:date ;
    ]
    ,
    [
        sh:path schema:birthPlace ;
        sh:maxCount 1;
        sh:nodeKind sh:IRI ;
    ],
    [
        sh:path schema:knows ;
        sh:or ([sh:class trip-onto:Location ]
               [sh:class trip-onto:Person ]) ;
    ],
    [
        sh:path trip-onto:hasJourney ;
        sh:class trip-onto:Journey ;
    ],
    [
        sh:path trip-onto:participatedIn ;
        sh:class trip-onto:Activity ;
    ] ,
    [
        sh:path trip-onto:hasGnd ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ],
    [
        sh:path trip-onto:hasWikiLink ;
        sh:maxCount 1 ;
    ] .

### Shape for Class Location ###
################################

trip-shacl:LocationShape a sh:NodeShape  ;
    sh:targetClass trip-onto:Location ;
    sh:property
    [
        sh:path trip-onto:hasGeonameID ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ] ,
    [
        sh:path schema:name ;
        sh:minCount 1 ;
        sh:languageIn ("en" "de" "fr" "es") ;
    ] ,
    [
        sh:path trip-onto:hasWikiLink ;
        sh:maxCount 1 ;
    ] .

### Shape for Class Excursion ###
################################
trip-shacl:ExcursionShape a sh:NodeShape  ;
    sh:targetClass trip-onto:Excursion ;
    sh:property
    [
        sh:path trip-onto:hasDestination ;
        sh:equals trip-onto:hasStartLocation ;
        sh:severity sh:Violation ;
        sh:message "An excursion is specified by returning back to the location of departure after visiting a different location"@en;
    ] .


### Shape for Class Stay ###
################################
trip-shacl:StayShape a sh:NodeShape  ;
    sh:targetClass trip-onto:Stay ;
    sh:property
	  [
        sh:path trip-onto:hasAccommodation ;
        sh:or ([sh:class trip-onto:Accommodation]
               [sh:nodeKind sh:IRI]) ;
    ] ,
    [
        sh:path trip-onto:hasActivity ;
        sh:node trip-shacl:ActivityShape ;
    ] .

### Shape for Class Accommodation ###
################################
trip-shacl:AccommodationShape a sh:NodeShape ;
    sh:targetClass trip-onto:Accommodation ;
    sh:property
    [
        sh:path schema:name ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
    ] ,
    [
        sh:path schema:adress ;
        sh:datatype xsd:string ;
    ] ,
    [
        sh:path trip-onto:hasLocation;
        sh:or ( [sh:datatype xsd:string ]
                [sh:class trip-onto:Location ]
                [sh:datatype xsd:anyURI ]
                [sh:nodeKind sh:IRI ]) ;
    ] .

### Shape for Class Activity ###
################################
trip-shacl:ActivityShape a sh:NodeShape;
    sh:targetClass trip-onto:Activity;
    sh:property
    [
        sh:path trip-onto:hasParticipant;
        sh:nodeKind sh:IRI;
    ] ,
    [
        sh:path schema:name;
        sh:datatype xsd:string;
        sh:minCount 1;
    ] ,
    [
        sh:path trip-onto:hasLocation;
        sh:or ( [sh:datatype xsd:string ]
                [sh:class trip-onto:Location ]
                [sh:datatype xsd:anyURI ]
                [sh:nodeKind sh:IRI ]) ;
    ] .

### Shape for Class SightSeeing ###
################################
trip-shacl:SightSeeingShape a sh:NodeShape;
    sh:targetClass trip-onto:SightSeeing;
    sh:property
    [
        sh:path trip-onto:sightingOf;
        sh:minCount 1 ;
        sh:or ([sh:datatype xsd:anyURI ]
                [sh:nodeKind sh:IRI]
                [sh:datatype xsd:string ]);
    ].

### Shape for Class Dining ###
################################
trip-shacl:DiningShape a sh:NodeShape;
    sh:targetClass trip-onto:Dining;
    sh:property
    [
        sh:path trip-onto:mealType;
        sh:datatype xsd:string;
    ],
    [
        sh:path trip-onto:cuisine ;
        sh:datatype xsd:string;
    ].

### Shape for Class Entertainment ###
################################
trip-shacl:EntertainmentShape a sh:NodeShape;
    sh:targetClass trip-onto:Entertainment ;
    sh:property
    [
        sh:path trip-onto:entertainmentType ;
        sh:datatype xsd:string;
    ] .


### Shape for Class Entry ###
################################
trip-shacl:EntryShape a sh:NodeShape  ;
    sh:targetClass trip-onto:Entry ;
    sh:property
    [
        sh:path trip-onto:hasTextContent ;
        sh:minCount 1 ;
        sh:node trip-shacl:TextContentShape;
    ],
    [
        sh:path trip-onto:hasDate ;
        sh:or ( [sh:datatype xsd:dateTime ]
                [sh:datatype xsd:date ]
                [sh:datatype xsd:gYear ]) ;
    ] .


### Shape for Class TextContent ###
################################
trip-shacl:TextContentShape a sh:NodeShape;
    sh:targetClass trip-onto:TextContent;
    sh:property
    [
        sh:path trip-onto:hasText;
        sh:minCount 1 ;
        sh:datatype xsd:string;
    ].


# ##############################################################
## Shapes for Star Properties
# ##############################################################

### Shape for calendar ###
################################
trip-shacl:calendarPropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:calendar ;
    	sh:in ("JULIAN" "GREGORIAN" "ISLAMIC") .

### Shape for  accordingTo ###
################################
trip-shacl:accordingToPropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:accordingTo ;
    	sh:or ([sh:node trip-shacl:PersonShape]
    	        [sh:nodeKind sh:IRI]) .

### Shape for Property mentionedIn ###
################################
trip-shacl:mentionedInPropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:mentionedIn ;
    	sh:or ([sh:node trip-shacl:EntryShape]
    	        [sh:nodeKind sh:IRI]) .

### Shape for Property hasDescription ###
################################
trip-shacl:hasDescriptionPropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:hasDescription ;
    	sh:or ([ sh:datatype xsd:string ]
             [ sh:nodeKind sh:IRI ]) .

### Shape for Property hasStartLocation ###
################################
trip-shacl:hasStartLocationPropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:hasStartLocation ;
    	sh:or ([sh:class trip-onto:Location]
    	        [sh:nodeKind sh:IRI]) .

###  hasDestination ###
trip-shacl:hasDestinationPropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:hasDestination ;
    	sh:or ([sh:class trip-onto:Location]
    	        [sh:nodeKind sh:IRI]) .

# hasArrival
trip-shacl:hasArrivalPropertyShape
    a sh:NodeShape ;
    sh:targetObjectsOf trip-onto:hasArrival;
    sh:or ( [sh:datatype xsd:dateTime ]
                [sh:datatype xsd:date ]
                [sh:datatype xsd:time ]) .

# hasDeparture
trip-shacl:hasDeparturePropertyShape
    a sh:NodeShape ;
    sh:targetObjectsOf trip-onto:hasDeparture;
    sh:or ( [sh:datatype xsd:dateTime ]
                [sh:datatype xsd:date ]
                [sh:datatype xsd:time ]) .

###  hasStartDate ###
trip-shacl:hasStartDatePropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:hasStartDate ;
    	sh:or ( [sh:datatype xsd:dateTime ]
                [sh:datatype xsd:date ]
                [sh:datatype xsd:time ]) .

###  hasEndDate ###
trip-shacl:hasEndDatePropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:hasEndDate ;
    	sh:or ( [sh:datatype xsd:dateTime ]
                [sh:datatype xsd:date ]
                [sh:datatype xsd:time ]) .

###  meanOfTransportation ###
trip-shacl:meanOfTransportationShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:meanOfTransportation ;
        sh:or ( [sh:datatype xsd:anyURI ]
              [sh:nodeKind sh:IRI ]
              [sh:datatype xsd:string ]) .

### hasIntermediateDestination###
trip-shacl:hasIntermediateDestinationPropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:hasIntermediateDestination ;
    	sh:or ([sh:class trip-onto:Location]
                [sh:nodeKind sh:IRI]
                [sh:datatype xsd:anyURI]) .

### hasParticipant ###
trip-shacl:hasParticipantPropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:hasParticipant ;
    	sh:or ([sh:class trip-onto:Person]
                [sh:nodeKind sh:IRI]
                [sh:datatype xsd:anyURI]) .

### hasStage ###
trip-shacl:hasStagePropertyShape
    	a sh:NodeShape ;
    	sh:targetObjectsOf trip-onto:hasStage ;
    	sh:class trip-onto:Journey .

### has stay ###
trip-shacl:hasStayPropertyShape
    a sh:NodeShape;
    sh:targetObjectsOf trip-onto:hasStay;
    sh:node trip-shacl:StayShape .

### has activity ###
trip-shacl:hasActivityPropertyShape
    a sh:NodeShape;
    sh:targetObjectsOf trip-onto:hasActivity;
    sh:node trip-onto:ActivityShape .

### has occurence ###
trip-shacl:hasOccurrencePropertyShape
    a sh:NodeShape;
    sh:targetObjectsOf trip-onto:hasOccurrence;
    sh:class trip-onto:Occurence .

### has transit ###
trip-shacl:hasTransitPropertyShape
    a sh:NodeShape;
    sh:targetObjectsOf trip-onto:hasTransitFrom;
    sh:or ([sh:node trip-shacl:LocationShape ]
            [sh:nodeKind sh:IRI]
            [sh:datatype xsd:anyURI]).

### hasCost ###
trip-shacl:hasCostPropertyShape
    a sh:NodeShape;
    sh:targetObjectsOf trip-onto:hasCost;
    sh:or ( [sh:datatype xsd:float ]
            [sh:datatype xsd:integer ]).

### currency ###
trip-shacl:hasCurrencyPropertyShape
    a sh:NodeShape;
    sh:targetObjectsOf trip-onto:hasCurrency;
    sh:or ( [sh:datatype xsd:string ]
            [sh:datatype xsd:anyURI]
            [sh:nodeKind sh:IRI ]) .

### wikilink ###
trip-shacl:hasWikiLinkPropertyShape
    a sh:NodeShape;
    sh:targetObjectsOf trip-onto:hasWikiLink;
    sh:or ([sh:nodeKind sh:IRI]
            [sh:datatype xsd:anyURI]).
